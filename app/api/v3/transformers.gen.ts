// This file is auto-generated by @hey-api/openapi-ts

import type { V3GetTotalMinutesResponse, V3GetUserSelfResponse, V3GetUserByUserIdResponse, V3CreateCheckoutResponse, V3GetLeaderboardResponse, V3GetTagsResponse, V3CreateTagResponse, V3GetTagResponse, V3UpdateTagResponse, V3EvaluateWorkspaceTagsResponse, V3GetTagHistoryResponse, V3GetTagTimeStatsResponse } from './types.gen';

const totalMinutesResponseSchemaResponseTransformer = (data: any) => {
    data.cacheTimestamp = new Date(data.cacheTimestamp);
    return data;
};

export const v3GetTotalMinutesResponseTransformer = async (data: any): Promise<V3GetTotalMinutesResponse> => {
    data = totalMinutesResponseSchemaResponseTransformer(data);
    return data;
};

const userSelfPublicSchemaResponseTransformer = (data: any) => {
    if (data.planExpiresAt) {
        data.planExpiresAt = new Date(data.planExpiresAt);
    }
    data.createdAt = new Date(data.createdAt);
    data.updatedAt = new Date(data.updatedAt);
    return data;
};

export const v3GetUserSelfResponseTransformer = async (data: any): Promise<V3GetUserSelfResponse> => {
    data = userSelfPublicSchemaResponseTransformer(data);
    return data;
};

const dtoUserPublicSchemaResponseTransformer = (data: any) => {
    data.createdAt = new Date(data.createdAt);
    data.updatedAt = new Date(data.updatedAt);
    return data;
};

export const v3GetUserByUserIdResponseTransformer = async (data: any): Promise<V3GetUserByUserIdResponse> => {
    data = dtoUserPublicSchemaResponseTransformer(data);
    return data;
};

const checkoutResponseSchemaResponseTransformer = (data: any) => {
    data.expiresAt = new Date(data.expiresAt);
    return data;
};

export const v3CreateCheckoutResponseTransformer = async (data: any): Promise<V3CreateCheckoutResponse> => {
    data = checkoutResponseSchemaResponseTransformer(data);
    return data;
};

const srcDtoUserPublicSchemaResponseTransformer = (data: any) => {
    data.createdAt = new Date(data.createdAt);
    data.updatedAt = new Date(data.updatedAt);
    return data;
};

const leaderboardEntrySchemaResponseTransformer = (data: any) => {
    data.user = srcDtoUserPublicSchemaResponseTransformer(data.user);
    return data;
};

const leaderboardResponseSchemaResponseTransformer = (data: any) => {
    data.entries = data.entries.map((item: any) => {
        return leaderboardEntrySchemaResponseTransformer(item);
    });
    data.updatedAt = new Date(data.updatedAt);
    return data;
};

export const v3GetLeaderboardResponseTransformer = async (data: any): Promise<V3GetLeaderboardResponse> => {
    data = leaderboardResponseSchemaResponseTransformer(data);
    return data;
};

const tagResponseSchemaResponseTransformer = (data: any) => {
    data.createdAt = new Date(data.createdAt);
    data.updatedAt = new Date(data.updatedAt);
    return data;
};

export const v3GetTagsResponseTransformer = async (data: any): Promise<V3GetTagsResponse> => {
    data = data.map((item: any) => {
        return tagResponseSchemaResponseTransformer(item);
    });
    return data;
};

export const v3CreateTagResponseTransformer = async (data: any): Promise<V3CreateTagResponse> => {
    data = tagResponseSchemaResponseTransformer(data);
    return data;
};

export const v3GetTagResponseTransformer = async (data: any): Promise<V3GetTagResponse> => {
    data = tagResponseSchemaResponseTransformer(data);
    return data;
};

export const v3UpdateTagResponseTransformer = async (data: any): Promise<V3UpdateTagResponse> => {
    data = tagResponseSchemaResponseTransformer(data);
    return data;
};

const workspaceEvaluationResponseSchemaResponseTransformer = (data: any) => {
    data.matching_tags = data.matching_tags.map((item: any) => {
        return tagResponseSchemaResponseTransformer(item);
    });
    return data;
};

export const v3EvaluateWorkspaceTagsResponseTransformer = async (data: any): Promise<V3EvaluateWorkspaceTagsResponse> => {
    data = workspaceEvaluationResponseSchemaResponseTransformer(data);
    return data;
};

const tagHistoryResponseSchemaResponseTransformer = (data: any) => {
    data.tag = tagResponseSchemaResponseTransformer(data.tag);
    data.periodStart = new Date(data.periodStart);
    data.periodEnd = new Date(data.periodEnd);
    return data;
};

export const v3GetTagHistoryResponseTransformer = async (data: any): Promise<V3GetTagHistoryResponse> => {
    data = tagHistoryResponseSchemaResponseTransformer(data);
    return data;
};

const tagTimeDataSchemaResponseTransformer = (data: any) => {
    data.tag = tagResponseSchemaResponseTransformer(data.tag);
    return data;
};

const tagTimeStatsResponseSchemaResponseTransformer = (data: any) => {
    data.data = data.data.map((item: any) => {
        return tagTimeDataSchemaResponseTransformer(item);
    });
    data.periodStart = new Date(data.periodStart);
    data.periodEnd = new Date(data.periodEnd);
    return data;
};

export const v3GetTagTimeStatsResponseTransformer = async (data: any): Promise<V3GetTagTimeStatsResponse> => {
    data = tagTimeStatsResponseSchemaResponseTransformer(data);
    return data;
};