// This file is auto-generated by @hey-api/openapi-ts

/**
 * CheckoutRequest
 */
export type CheckoutRequest = {
    type: string;
    product: string;
};

/**
 * CheckoutResponse
 */
export type CheckoutResponse = {
    checkoutUrl: string;
    expiresAt: Date;
};

/**
 * DiscountPublic
 */
export type DiscountPublic = {
    id: string;
    name: string;
    code: string;
    amount: number;
    amountType: string;
    expiresAt?: Date | null;
    duration: string;
    durationInMonths?: number | null;
    status: string;
};

/**
 * EventLogPublic
 */
export type EventLogPublic = {
    eventTime: number;
    language: string;
    project: string;
    relativeFile: string;
    editor: string;
    platform: string;
    absoluteFile: string;
    gitOrigin: string;
    gitBranch: string;
};

/**
 * EventLogRequest
 */
export type EventLogRequest = {
    eventTime: number;
    language: string;
    project: string;
    relativeFile: string;
    editor: string;
    platform: string;
    absoluteFile?: string | null;
    gitOrigin?: string | null;
    gitBranch?: string | null;
};

/**
 * LanguageRankingEntry
 */
export type LanguageRankingEntry = {
    user: SrcDtoUserPublic;
    totalMinutes: number;
    rank: number;
    percentile: number;
};

/**
 * LanguageRankingResponse
 */
export type LanguageRankingResponse = {
    entries: Array<LanguageRankingEntry>;
    language: string;
    totalUsers: number;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

/**
 * LeaderboardEntry
 */
export type LeaderboardEntry = {
    user: SrcDtoUserPublic;
    totalMinutes: number;
    rank: number;
};

/**
 * LeaderboardResponse
 */
export type LeaderboardResponse = {
    entries: Array<LeaderboardEntry>;
    totalUsers: number;
    updatedAt: Date;
};

/**
 * PlanStatus
 */
export type PlanStatus = 'active' | 'cancelled' | 'expired' | 'on_trial' | 'paused' | 'past_due' | 'unpaid' | '';

/**
 * PrivacySettingsRequest
 */
export type PrivacySettingsRequest = {
    showGithub?: boolean;
};

/**
 * PrivacySettingsResponse
 */
export type PrivacySettingsResponse = {
    showEmail: boolean;
    showGithub: boolean;
};

/**
 * ProductPublic
 */
export type ProductPublic = {
    id: string;
    name: string;
    description: string;
    price: number;
    currency: string;
    interval?: string | null;
};

/**
 * RootResponse
 */
export type RootResponse = {
    message: string;
    documentUrl: string;
};

/**
 * ShieldResponse
 */
export type ShieldResponse = {
    schemaVersion?: number;
    logoSvg?: string | null;
    label: string;
    message: string;
    color: string;
};

/**
 * SimpleMinutes
 */
export type SimpleMinutes = {
    minutes: number;
};

/**
 * StatsData
 */
export type StatsData = {
    duration: number;
    time: string;
    by: string;
};

/**
 * StatsResponse
 */
export type StatsResponse = {
    data: Array<StatsData>;
};

/**
 * StatsTimeResponse
 */
export type StatsTimeResponse = {
    data: Array<DtoStatsTimeData>;
};

/**
 * TagCreateRequest
 */
export type TagCreateRequest = {
    name: string;
    color: string;
    emoji?: string | null;
};

/**
 * TagHistoryResponse
 */
export type TagHistoryResponse = {
    tag: TagResponse;
    data: Array<DtoStatsTimeData>;
    totalMinutes: number;
    periodStart: Date;
    periodEnd: Date;
};

/**
 * TagResponse
 */
export type TagResponse = {
    id: string;
    name: string;
    color: string;
    emoji?: string | null;
    createdAt: Date;
    updatedAt: Date;
    rules: unknown;
};

/**
 * TagTimeData
 */
export type TagTimeData = {
    tag: TagResponse;
    totalMinutes: number;
};

/**
 * TagTimeStatsResponse
 */
export type TagTimeStatsResponse = {
    data: Array<TagTimeData>;
    totalMinutes: number;
    periodStart: Date;
    periodEnd: Date;
};

/**
 * TagUpdateRequest
 */
export type TagUpdateRequest = {
    name?: string | null;
    color?: string | null;
    emoji?: string | null;
    rules: unknown;
};

/**
 * TimeDistributionData
 */
export type TimeDistributionData = {
    hour: number;
    minute: number;
    count: number;
};

/**
 * TimeDistributionResponse
 */
export type TimeDistributionResponse = {
    data: Array<TimeDistributionData>;
};

/**
 * TokenRefreshResponse
 */
export type TokenRefreshResponse = {
    token: string;
    tokenV1: string;
};

/**
 * TopPublic
 */
export type TopPublic = {
    field: string;
    minutes: number;
};

/**
 * TotalMinutesResponse
 */
export type TotalMinutesResponse = {
    totalMinutes: number;
    last24HMinutes: number;
    cacheTimestamp: Date;
};

/**
 * UserCodingHistoryResponse
 */
export type UserCodingHistoryResponse = {
    userId: number;
    username: string;
    totalMinutes: number;
    data: Array<SrcDtoStatsTimeData>;
    periodStart: Date;
    periodEnd: Date;
    timeRangeDays: number;
    updatedAt: Date;
};

/**
 * UserDeleteResponse
 */
export type UserDeleteResponse = {
    success: boolean;
    message: string;
};

/**
 * UserLanguageRankResponse
 */
export type UserLanguageRankResponse = {
    userId: number;
    username: string;
    language: string;
    totalMinutes: number;
    rank: number;
    percentile: number;
    totalUsers: number;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

/**
 * UserSelfPublic
 */
export type UserSelfPublic = {
    id: number;
    email?: string | null;
    username: string;
    avatar?: string | null;
    githubId?: number | null;
    bio?: string | null;
    googleId?: string | null;
    plan: string;
    timezone?: string | null;
    uploadToken: string;
    planExpiresAt?: Date | null;
    planStatus?: PlanStatus | null;
    createdAt: Date;
    updatedAt: Date;
};

/**
 * WebhookResponse
 */
export type WebhookResponse = {
    success: boolean;
    message: string;
};

/**
 * WorkspaceEvaluationRequest
 */
export type WorkspaceEvaluationRequest = {
    workspaceName: string;
    language: string;
    gitOrigin?: string | null;
    gitBranch?: string | null;
    platform: string;
    editor: string;
    absoluteFile?: string | null;
    relativeFile: string;
};

/**
 * WorkspaceEvaluationResponse
 */
export type WorkspaceEvaluationResponse = {
    matching_tags: Array<TagResponse>;
};

/**
 * WorkspaceFileActivity
 */
export type WorkspaceFileActivity = {
    language: string;
    relativeFile: string;
    gitBranch: string;
    minutes: number;
};

/**
 * WorkspaceSearchResponse
 */
export type WorkspaceSearchResponse = {
    results: Array<WorkspaceSearchResult>;
    totalResults: number;
};

/**
 * WorkspaceSearchResult
 */
export type WorkspaceSearchResult = {
    workspaceName: string;
};

/**
 * YearlyReportDataPublic
 */
export type YearlyReportDataPublic = {
    topLanguages: Array<TopPublic>;
    hourlyDistribution: Array<TopPublic>;
    dailyDistribution: Array<TopPublic>;
};

/**
 * StatsTimeData
 */
export type DtoStatsTimeData = {
    duration: number;
    time: string;
};

/**
 * UserOverallRankResponse
 */
export type DtoUserOverallRankResponse = {
    userId: number;
    username: string;
    totalMinutes: number;
    percentile: number;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

/**
 * UserPublic
 */
export type DtoUserPublic = {
    id: number;
    email?: string | null;
    username: string;
    avatar?: string | null;
    githubId?: number | null;
    bio?: string | null;
    googleId?: string | null;
    plan: string;
    timezone?: string | null;
    createdAt: Date;
    updatedAt: Date;
};

/**
 * UserTopLanguageRankEntry
 */
export type DtoUserTopLanguageRankEntry = {
    language: string;
    totalMinutes: number;
    percentile: number;
};

/**
 * UserTopLanguagesRankResponse
 */
export type DtoUserTopLanguagesRankResponse = {
    userId: number;
    username: string;
    entries: Array<DtoUserTopLanguageRankEntry>;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

/**
 * StatsTimeData
 */
export type SrcDtoStatsTimeData = {
    duration: number;
    time: string;
};

/**
 * UserOverallRankResponse
 */
export type SrcDtoUserOverallRankResponse = {
    userId: number;
    username: string;
    totalMinutes: number;
    percentile: number;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

/**
 * UserPublic
 */
export type SrcDtoUserPublic = {
    id: number;
    email?: string | null;
    username: string;
    avatar?: string | null;
    githubId?: number | null;
    bio?: string | null;
    googleId?: string | null;
    plan: string;
    timezone?: string | null;
    createdAt: Date;
    updatedAt: Date;
};

/**
 * UserTopLanguageRankEntry
 */
export type SrcDtoUserTopLanguageRankEntry = {
    language: string;
    totalMinutes: number;
    percentile: number;
};

/**
 * UserTopLanguagesRankResponse
 */
export type SrcDtoUserTopLanguagesRankResponse = {
    userId: number;
    username: string;
    entries: Array<SrcDtoUserTopLanguageRankEntry>;
    timeRangeDays?: number | null;
    updatedAt: Date;
};

export type V3GetRootData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3';
};

export type V3GetRootResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: RootResponse;
};

export type V3GetRootResponse = V3GetRootResponses[keyof V3GetRootResponses];

export type V3GetTotalMinutesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/total-minutes';
};

export type V3GetTotalMinutesResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TotalMinutesResponse;
};

export type V3GetTotalMinutesResponse = V3GetTotalMinutesResponses[keyof V3GetTotalMinutesResponses];

export type V3GithubCallbackData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Authorization code from GitHub
         */
        code: string;
    };
    url: '/v3/auth/github';
};

export type V3GithubCallbackErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GithubCallbackError = V3GithubCallbackErrors[keyof V3GithubCallbackErrors];

export type V3GithubCallbackResponses = {
    /**
     * Redirect Response
     */
    200: unknown;
};

export type V3GoogleAuthData = {
    body: {
        [key: string]: unknown;
    };
    path?: never;
    query?: never;
    url: '/v3/auth/google';
};

export type V3GoogleAuthErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GoogleAuthError = V3GoogleAuthErrors[keyof V3GoogleAuthErrors];

export type V3GoogleAuthResponses = {
    /**
     * Redirect Response
     */
    201: unknown;
};

export type V3LogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/auth/logout';
};

export type V3LogoutResponses = {
    /**
     * Document created, URL follows
     */
    201: {
        [key: string]: unknown;
    };
};

export type V3LogoutResponse = V3LogoutResponses[keyof V3LogoutResponses];

export type V3RefreshTokenData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/auth/refresh-token';
};

export type V3RefreshTokenResponses = {
    /**
     * Document created, URL follows
     */
    201: TokenRefreshResponse;
};

export type V3RefreshTokenResponse = V3RefreshTokenResponses[keyof V3RefreshTokenResponses];

export type V3DeleteUserAccountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/users/self';
};

export type V3DeleteUserAccountResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: UserDeleteResponse;
};

export type V3DeleteUserAccountResponse = V3DeleteUserAccountResponses[keyof V3DeleteUserAccountResponses];

export type V3GetUserSelfData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/users/self';
};

export type V3GetUserSelfResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: UserSelfPublic;
};

export type V3GetUserSelfResponse = V3GetUserSelfResponses[keyof V3GetUserSelfResponses];

export type V3DeleteUserDataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/users/self/data';
};

export type V3DeleteUserDataResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: UserDeleteResponse;
};

export type V3DeleteUserDataResponse = V3DeleteUserDataResponses[keyof V3DeleteUserDataResponses];

export type V3ExportUserDataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/users/self/export';
};

export type V3ExportUserDataResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: string;
};

export type V3ExportUserDataResponse = V3ExportUserDataResponses[keyof V3ExportUserDataResponses];

export type V3GetPrivacySettingsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/users/self/privacy';
};

export type V3GetPrivacySettingsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: PrivacySettingsResponse;
};

export type V3GetPrivacySettingsResponse = V3GetPrivacySettingsResponses[keyof V3GetPrivacySettingsResponses];

export type V3UpdatePrivacySettingsData = {
    body: PrivacySettingsRequest;
    path?: never;
    query?: never;
    url: '/v3/users/self/privacy';
};

export type V3UpdatePrivacySettingsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3UpdatePrivacySettingsError = V3UpdatePrivacySettingsErrors[keyof V3UpdatePrivacySettingsErrors];

export type V3UpdatePrivacySettingsResponses = {
    /**
     * Document created, URL follows
     */
    201: PrivacySettingsResponse;
};

export type V3UpdatePrivacySettingsResponse = V3UpdatePrivacySettingsResponses[keyof V3UpdatePrivacySettingsResponses];

export type V3GetSelfMinutesData = {
    body?: never;
    path?: never;
    query?: {
        minutes?: number | null;
        start_time?: Date | null;
        end_time?: Date | null;
    };
    url: '/v3/users/self/minutes';
};

export type V3GetSelfMinutesErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetSelfMinutesError = V3GetSelfMinutesErrors[keyof V3GetSelfMinutesErrors];

export type V3GetSelfMinutesResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: SimpleMinutes;
};

export type V3GetSelfMinutesResponse = V3GetSelfMinutesResponses[keyof V3GetSelfMinutesResponses];

export type V3GetSelfOverallRankData = {
    body?: never;
    path?: never;
    query?: {
        start_time?: Date | null;
        end_time?: Date | null;
        days?: number | null;
    };
    url: '/v3/users/self/overall-rank';
};

export type V3GetSelfOverallRankErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetSelfOverallRankError = V3GetSelfOverallRankErrors[keyof V3GetSelfOverallRankErrors];

export type V3GetSelfOverallRankResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: DtoUserOverallRankResponse;
};

export type V3GetSelfOverallRankResponse = V3GetSelfOverallRankResponses[keyof V3GetSelfOverallRankResponses];

export type V3GetSelfTopLanguagesRankData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of top languages to include
         */
        top_n?: number;
        start_time?: Date | null;
        end_time?: Date | null;
        days?: number | null;
    };
    url: '/v3/users/self/top-languages-rank';
};

export type V3GetSelfTopLanguagesRankErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetSelfTopLanguagesRankError = V3GetSelfTopLanguagesRankErrors[keyof V3GetSelfTopLanguagesRankErrors];

export type V3GetSelfTopLanguagesRankResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: DtoUserTopLanguagesRankResponse;
};

export type V3GetSelfTopLanguagesRankResponse = V3GetSelfTopLanguagesRankResponses[keyof V3GetSelfTopLanguagesRankResponses];

export type V3GetTimeDistributionData = {
    body?: never;
    path?: never;
    query?: {
        start_time?: Date | null;
        end_time?: Date | null;
        days?: number | null;
        tz?: string | null;
        platform?: string | null;
        project?: string | null;
        language?: string | null;
    };
    url: '/v3/users/self/time-distribution';
};

export type V3GetTimeDistributionErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetTimeDistributionError = V3GetTimeDistributionErrors[keyof V3GetTimeDistributionErrors];

export type V3GetTimeDistributionResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TimeDistributionResponse;
};

export type V3GetTimeDistributionResponse = V3GetTimeDistributionResponses[keyof V3GetTimeDistributionResponses];

export type V3GetUserByUserIdData = {
    body?: never;
    path: {
        user_id: number;
    };
    query?: never;
    url: '/v3/users/{user_id}';
};

export type V3GetUserByUserIdErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserByUserIdError = V3GetUserByUserIdErrors[keyof V3GetUserByUserIdErrors];

export type V3GetUserByUserIdResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: DtoUserPublic;
};

export type V3GetUserByUserIdResponse = V3GetUserByUserIdResponses[keyof V3GetUserByUserIdResponses];

export type V3GetUserShieldData = {
    body?: never;
    path?: never;
    query: {
        uid: number;
        minutes?: number | string | null;
        project?: string | null;
        language?: string | null;
        only_hours?: boolean;
    };
    url: '/v3/users/shield';
};

export type V3GetUserShieldErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserShieldError = V3GetUserShieldErrors[keyof V3GetUserShieldErrors];

export type V3GetUserShieldResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: ShieldResponse;
};

export type V3GetUserShieldResponse = V3GetUserShieldResponses[keyof V3GetUserShieldResponses];

export type V3GetWorkspaceFilesData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Project/workspace name to filter by
         */
        project: string;
        /**
         * Number of days to look back
         */
        days?: number | null;
        /**
         * Start time for filtering (UTC)
         */
        start_time?: Date | null;
        /**
         * End time for filtering (UTC)
         */
        end_time?: Date | null;
    };
    url: '/v3/users/self/workspace';
};

export type V3GetWorkspaceFilesErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetWorkspaceFilesError = V3GetWorkspaceFilesErrors[keyof V3GetWorkspaceFilesErrors];

export type V3GetWorkspaceFilesResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<WorkspaceFileActivity>;
};

export type V3GetWorkspaceFilesResponse = V3GetWorkspaceFilesResponses[keyof V3GetWorkspaceFilesResponses];

export type V3ListSelfLatestLogsData = {
    body?: never;
    path?: never;
    query?: {
        limit?: number;
    };
    url: '/v3/users/self/latest-logs';
};

export type V3ListSelfLatestLogsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3ListSelfLatestLogsError = V3ListSelfLatestLogsErrors[keyof V3ListSelfLatestLogsErrors];

export type V3ListSelfLatestLogsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<EventLogPublic>;
};

export type V3ListSelfLatestLogsResponse = V3ListSelfLatestLogsResponses[keyof V3ListSelfLatestLogsResponses];

export type V3ListSelfStatsData = {
    body?: never;
    path?: never;
    query: {
        by: 'language' | 'workspace' | 'editor' | 'platform';
        unit?: 'days' | 'hours' | 'minutes';
        tz?: string | null;
        limit?: number;
        start_time?: Date | null;
        end_time?: Date | null;
        platform?: string | null;
        project?: string | null;
        language?: string | null;
    };
    url: '/v3/users/self/stats';
};

export type V3ListSelfStatsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3ListSelfStatsError = V3ListSelfStatsErrors[keyof V3ListSelfStatsErrors];

export type V3ListSelfStatsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: StatsResponse;
};

export type V3ListSelfStatsResponse = V3ListSelfStatsResponses[keyof V3ListSelfStatsResponses];

export type V3ListSelfStatsTimeData = {
    body?: never;
    path?: never;
    query?: {
        unit?: 'days' | 'hours' | 'minutes';
        tz?: string | null;
        limit?: number;
        start_time?: Date | null;
        end_time?: Date | null;
        platform?: string | null;
        project?: string | null;
        language?: string | null;
    };
    url: '/v3/users/self/stats_time';
};

export type V3ListSelfStatsTimeErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3ListSelfStatsTimeError = V3ListSelfStatsTimeErrors[keyof V3ListSelfStatsTimeErrors];

export type V3ListSelfStatsTimeResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: StatsTimeResponse;
};

export type V3ListSelfStatsTimeResponse = V3ListSelfStatsTimeResponses[keyof V3ListSelfStatsTimeResponses];

export type V3ListSelfTopData = {
    body?: never;
    path?: never;
    query: {
        field: 'language' | 'workspace' | 'editor' | 'platform';
        limit?: number | null;
        minutes?: number | null;
        start_time?: Date | null;
        end_time?: Date | null;
        languages?: Array<string> | null;
        workspaces?: Array<string> | null;
        platforms?: Array<string> | null;
        editors?: Array<string> | null;
    };
    url: '/v3/users/self/top';
};

export type V3ListSelfTopErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3ListSelfTopError = V3ListSelfTopErrors[keyof V3ListSelfTopErrors];

export type V3ListSelfTopResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<TopPublic>;
};

export type V3ListSelfTopResponse = V3ListSelfTopResponses[keyof V3ListSelfTopResponses];

export type V3PostEventLogData = {
    body: EventLogRequest;
    path?: never;
    query?: never;
    url: '/v3/users/event-log';
};

export type V3PostEventLogErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3PostEventLogError = V3PostEventLogErrors[keyof V3PostEventLogErrors];

export type V3PostEventLogResponses = {
    /**
     * Document created, URL follows
     */
    201: unknown;
};

export type V3SearchWorkspacesData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Search query for workspace names
         */
        q?: string;
        /**
         * Number of results to return
         */
        limit?: number;
    };
    url: '/v3/users/self/workspaces/search';
};

export type V3SearchWorkspacesErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3SearchWorkspacesError = V3SearchWorkspacesErrors[keyof V3SearchWorkspacesErrors];

export type V3SearchWorkspacesResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: WorkspaceSearchResponse;
};

export type V3SearchWorkspacesResponse = V3SearchWorkspacesResponses[keyof V3SearchWorkspacesResponses];

export type V3GetYearlyReportDataData = {
    body?: never;
    path?: never;
    query: {
        user_id: number;
        /**
         * Year to get report for
         */
        year?: '2024';
        /**
         * Timezone for the report
         */
        timezone?: string;
    };
    url: '/v3/logs/yearly-report-data';
};

export type V3GetYearlyReportDataErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetYearlyReportDataError = V3GetYearlyReportDataErrors[keyof V3GetYearlyReportDataErrors];

export type V3GetYearlyReportDataResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: YearlyReportDataPublic;
};

export type V3GetYearlyReportDataResponse = V3GetYearlyReportDataResponses[keyof V3GetYearlyReportDataResponses];

export type V3CreateCheckoutData = {
    body: CheckoutRequest;
    path?: never;
    query?: never;
    url: '/v3/payments/checkout';
};

export type V3CreateCheckoutErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3CreateCheckoutError = V3CreateCheckoutErrors[keyof V3CreateCheckoutErrors];

export type V3CreateCheckoutResponses = {
    /**
     * Document created, URL follows
     */
    201: CheckoutResponse;
};

export type V3CreateCheckoutResponse = V3CreateCheckoutResponses[keyof V3CreateCheckoutResponses];

export type V3GetProductsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/payments/products';
};

export type V3GetProductsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<ProductPublic>;
};

export type V3GetProductsResponse = V3GetProductsResponses[keyof V3GetProductsResponses];

export type V3HandleLemonsqueezyWebhookData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/payments/webhooks/lemonsqueezy';
};

export type V3HandleLemonsqueezyWebhookResponses = {
    /**
     * Document created, URL follows
     */
    201: WebhookResponse;
};

export type V3HandleLemonsqueezyWebhookResponse = V3HandleLemonsqueezyWebhookResponses[keyof V3HandleLemonsqueezyWebhookResponses];

export type V3GetActiveDiscountsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/discounts/active';
};

export type V3GetActiveDiscountsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<DiscountPublic>;
};

export type V3GetActiveDiscountsResponse = V3GetActiveDiscountsResponses[keyof V3GetActiveDiscountsResponses];

export type V3GetLanguageRankingData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Programming language to rank by
         */
        language: string;
        /**
         * Number of entries to return
         */
        limit?: number;
        /**
         * Number of days to look back, null for all time
         */
        days?: number | null;
    };
    url: '/v3/public/language-ranking';
};

export type V3GetLanguageRankingErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetLanguageRankingError = V3GetLanguageRankingErrors[keyof V3GetLanguageRankingErrors];

export type V3GetLanguageRankingResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: LanguageRankingResponse;
};

export type V3GetLanguageRankingResponse = V3GetLanguageRankingResponses[keyof V3GetLanguageRankingResponses];

export type V3GetLeaderboardData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of entries to return
         */
        limit?: number;
        /**
         * Number of days to look back, null for all time
         */
        days?: number | null;
    };
    url: '/v3/public/leaderboard';
};

export type V3GetLeaderboardErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetLeaderboardError = V3GetLeaderboardErrors[keyof V3GetLeaderboardErrors];

export type V3GetLeaderboardResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: LeaderboardResponse;
};

export type V3GetLeaderboardResponse = V3GetLeaderboardResponses[keyof V3GetLeaderboardResponses];

export type V3GetUserCodingHistoryData = {
    body?: never;
    path: {
        /**
         * User ID to get coding history for
         */
        user_id: number;
    };
    query?: {
        /**
         * Number of days to look back (max 90 for non-pro users)
         */
        days?: number;
    };
    url: '/v3/public/users/{user_id}/coding-history';
};

export type V3GetUserCodingHistoryErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserCodingHistoryError = V3GetUserCodingHistoryErrors[keyof V3GetUserCodingHistoryErrors];

export type V3GetUserCodingHistoryResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: UserCodingHistoryResponse;
};

export type V3GetUserCodingHistoryResponse = V3GetUserCodingHistoryResponses[keyof V3GetUserCodingHistoryResponses];

export type V3GetUserLanguageRankData = {
    body?: never;
    path: {
        user_id: number;
    };
    query: {
        /**
         * Programming language to check rank for
         */
        language: string;
        /**
         * Number of days to look back, null for all time
         */
        days?: number | null;
    };
    url: '/v3/public/users/{user_id}/language-rank';
};

export type V3GetUserLanguageRankErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserLanguageRankError = V3GetUserLanguageRankErrors[keyof V3GetUserLanguageRankErrors];

export type V3GetUserLanguageRankResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: UserLanguageRankResponse;
};

export type V3GetUserLanguageRankResponse = V3GetUserLanguageRankResponses[keyof V3GetUserLanguageRankResponses];

export type V3GetUserOverallRankData = {
    body?: never;
    path: {
        /**
         * User ID to get overall ranking for
         */
        user_id: number;
    };
    query?: {
        /**
         * Number of days to look back (None for all time)
         */
        days?: number | null;
    };
    url: '/v3/public/users/{user_id}/overall-rank';
};

export type V3GetUserOverallRankErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserOverallRankError = V3GetUserOverallRankErrors[keyof V3GetUserOverallRankErrors];

export type V3GetUserOverallRankResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: SrcDtoUserOverallRankResponse;
};

export type V3GetUserOverallRankResponse = V3GetUserOverallRankResponses[keyof V3GetUserOverallRankResponses];

export type V3GetUserTopLanguagesRankData = {
    body?: never;
    path: {
        /**
         * User ID to get top languages ranking for
         */
        user_id: number;
    };
    query?: {
        /**
         * Number of top languages to include
         */
        top_n?: number;
        /**
         * Number of days to look back (None for all time)
         */
        days?: number | null;
    };
    url: '/v3/public/users/{user_id}/top-languages-rank';
};

export type V3GetUserTopLanguagesRankErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetUserTopLanguagesRankError = V3GetUserTopLanguagesRankErrors[keyof V3GetUserTopLanguagesRankErrors];

export type V3GetUserTopLanguagesRankResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: SrcDtoUserTopLanguagesRankResponse;
};

export type V3GetUserTopLanguagesRankResponse = V3GetUserTopLanguagesRankResponses[keyof V3GetUserTopLanguagesRankResponses];

export type V3GetTagsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/tags';
};

export type V3GetTagsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: Array<TagResponse>;
};

export type V3GetTagsResponse = V3GetTagsResponses[keyof V3GetTagsResponses];

export type V3CreateTagData = {
    body: TagCreateRequest;
    path?: never;
    query?: never;
    url: '/v3/tags';
};

export type V3CreateTagErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3CreateTagError = V3CreateTagErrors[keyof V3CreateTagErrors];

export type V3CreateTagResponses = {
    /**
     * Document created, URL follows
     */
    201: TagResponse;
};

export type V3CreateTagResponse = V3CreateTagResponses[keyof V3CreateTagResponses];

export type V3DeleteTagData = {
    body?: never;
    path: {
        tag_id: string;
    };
    query?: never;
    url: '/v3/tags/{tag_id}';
};

export type V3DeleteTagErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3DeleteTagError = V3DeleteTagErrors[keyof V3DeleteTagErrors];

export type V3DeleteTagResponses = {
    /**
     * Request fulfilled, nothing follows
     */
    204: void;
};

export type V3DeleteTagResponse = V3DeleteTagResponses[keyof V3DeleteTagResponses];

export type V3GetTagData = {
    body?: never;
    path: {
        tag_id: string;
    };
    query?: never;
    url: '/v3/tags/{tag_id}';
};

export type V3GetTagErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetTagError = V3GetTagErrors[keyof V3GetTagErrors];

export type V3GetTagResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TagResponse;
};

export type V3GetTagResponse = V3GetTagResponses[keyof V3GetTagResponses];

export type V3UpdateTagData = {
    body: TagUpdateRequest;
    path: {
        tag_id: string;
    };
    query?: never;
    url: '/v3/tags/{tag_id}';
};

export type V3UpdateTagErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3UpdateTagError = V3UpdateTagErrors[keyof V3UpdateTagErrors];

export type V3UpdateTagResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TagResponse;
};

export type V3UpdateTagResponse = V3UpdateTagResponses[keyof V3UpdateTagResponses];

export type V3EvaluateWorkspaceTagsData = {
    body: WorkspaceEvaluationRequest;
    path?: never;
    query?: never;
    url: '/v3/tags/evaluate';
};

export type V3EvaluateWorkspaceTagsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3EvaluateWorkspaceTagsError = V3EvaluateWorkspaceTagsErrors[keyof V3EvaluateWorkspaceTagsErrors];

export type V3EvaluateWorkspaceTagsResponses = {
    /**
     * Document created, URL follows
     */
    201: WorkspaceEvaluationResponse;
};

export type V3EvaluateWorkspaceTagsResponse = V3EvaluateWorkspaceTagsResponses[keyof V3EvaluateWorkspaceTagsResponses];

export type V3GetTagHistoryData = {
    body?: never;
    path: {
        tag_id: string;
    };
    query?: {
        /**
         * Start datetime
         */
        start_datetime?: Date | null;
        /**
         * End datetime
         */
        end_datetime?: Date | null;
        /**
         * Group by time period: day, week, month
         */
        group_by?: string;
    };
    url: '/v3/tags/{tag_id}/history';
};

export type V3GetTagHistoryErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetTagHistoryError = V3GetTagHistoryErrors[keyof V3GetTagHistoryErrors];

export type V3GetTagHistoryResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TagHistoryResponse;
};

export type V3GetTagHistoryResponse = V3GetTagHistoryResponses[keyof V3GetTagHistoryResponses];

export type V3GetTagTimeStatsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Start datetime
         */
        start_datetime?: Date | null;
        /**
         * End datetime
         */
        end_datetime?: Date | null;
        /**
         * Comma-separated tag IDs
         */
        tag_ids?: string | null;
    };
    url: '/v3/tags/stats';
};

export type V3GetTagTimeStatsErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetTagTimeStatsError = V3GetTagTimeStatsErrors[keyof V3GetTagTimeStatsErrors];

export type V3GetTagTimeStatsResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: TagTimeStatsResponse;
};

export type V3GetTagTimeStatsResponse = V3GetTagTimeStatsResponses[keyof V3GetTagTimeStatsResponses];

export type V3GetCalendarFeedData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Group calendar by field (language, workspace, editor, platform)
         */
        target?: string;
        /**
         * Start date (YYYY-MM-DD format)
         */
        start_date?: string | null;
        /**
         * End date (YYYY-MM-DD format)
         */
        end_date?: string | null;
        /**
         * Minimum event duration in minutes
         */
        minimum_duration_minutes?: number;
        /**
         * Timezone for events
         */
        timezone?: string;
    };
    url: '/v3/icalendar/feed.ics';
};

export type V3GetCalendarFeedErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3GetCalendarFeedError = V3GetCalendarFeedErrors[keyof V3GetCalendarFeedErrors];

export type V3GetCalendarFeedResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: string;
};

export type V3GetCalendarFeedResponse = V3GetCalendarFeedResponses[keyof V3GetCalendarFeedResponses];

export type V3GetCalendarInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/icalendar/info';
};

export type V3GetCalendarInfoResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        [key: string]: unknown;
    };
};

export type V3GetCalendarInfoResponse = V3GetCalendarInfoResponses[keyof V3GetCalendarInfoResponses];

export type V3BeAnyUserData = {
    body?: never;
    path?: never;
    query: {
        uid: number;
    };
    url: '/v3/dev/be';
};

export type V3BeAnyUserErrors = {
    /**
     * Validation Exception
     */
    400: {
        status_code: number;
        detail: string;
        extra?: null | Array<unknown> | Array<unknown>;
    };
};

export type V3BeAnyUserError = V3BeAnyUserErrors[keyof V3BeAnyUserErrors];

export type V3BeAnyUserResponses = {
    /**
     * Document created, URL follows
     */
    201: unknown;
};

export type V3GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/metrics';
};

export type V3GetResponses = {
    /**
     * Request fulfilled, document follows
     */
    200: {
        [key: string]: unknown;
    };
};

export type V3GetResponse = V3GetResponses[keyof V3GetResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};